{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","todosWithUser","userId","usersFromServer","find","App","state","users","isTitleValid","isUserValid","handleChange","event","target","value","setState","addNewTodos","preventDefault","titleRemovedSpace","trim","sort","a","b","userForNewTodo","user1","newTodo","replace","comleted","this","action","method","onSubmit","type","placeholder","onChange","disabled","optionUser","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.199cd945.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\ninterface Todo {\n  user: User | null;\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed, id, user, title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed === true },\n        )\n      }\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user: User | null;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ntype TodoListProps = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC< TodoListProps > = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUser = [...todosFromServer].map(todo => ({\n  ...todo,\n  user: usersFromServer.find(\n    (user) => todo.userId === user.id,\n  ) || null,\n}));\n\nexport class App extends React.Component {\n  state = {\n    todos: todosWithUser,\n    users: usersFromServer,\n    isTitleValid: true,\n    title: '',\n    isUserValid: true,\n    user: '0',\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title': this.setState({ isTitleValid: true });\n\n        break;\n\n      case 'user': this.setState({ isUserValid: true });\n\n        break;\n\n      default:\n\n        return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n\n    // if (name === 'title') {\n    //   this.setState({ isTitleValid: true });\n    // }\n\n    // if (name === 'user') {\n    //   this.setState({ isUserValid: true });\n    // }\n\n    // this.setState({\n    //   [name]: value,\n    // });\n  };\n\n  addNewTodos = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title, user, todos, users,\n    } = this.state;\n\n    const titleRemovedSpace = title.trim();\n\n    if (titleRemovedSpace === '' && user === '0') {\n      this.setState({\n        isTitleValid: false,\n        isUserValid: false,\n      });\n\n      return;\n    }\n\n    if (titleRemovedSpace === '') {\n      this.setState({ isTitleValid: false });\n\n      return;\n    }\n\n    if (user === '0') {\n      this.setState({ isUserValid: false });\n\n      return;\n    }\n\n    const { id } = [...todos].sort((a, b) => b.id - a.id)[0];\n    const userForNewTodo = users.find(\n      user1 => user1.name === user,\n    );\n\n    const newTodo = {\n      id: id + 1,\n      title: title.replace(/[^a-zA-Zа-яА-Я0-9\\s]+/g, ''),\n      comleted: false,\n      userId: userForNewTodo?.id,\n      user: userForNewTodo,\n    };\n\n    this.setState({\n      todos: [\n        ...todos,\n        newTodo,\n      ],\n      isTitleValid: true,\n      title: '',\n      isUserValid: true,\n      user: '0',\n    });\n  };\n\n  render() {\n    const {\n      isTitleValid, isUserValid, title, user, todos, users,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={this.addNewTodos}\n        >\n          <div className=\"field\">\n            <label>\n              {'Title: '}\n              <input\n                name=\"title\"\n                type=\"text\"\n                data-cy=\"titleInput\"\n                placeholder=\"Enter a title\"\n                value={title}\n                onChange={this.handleChange}\n              />\n            </label>\n\n            {!isTitleValid && (\n              <span\n                className=\"error\"\n              >\n                Please enter a title\n              </span>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label>\n              {'User: '}\n              <select\n                data-cy=\"userSelect\"\n                name=\"user\"\n                value={user}\n                onChange={this.handleChange}\n              >\n                <option\n                  value=\"0\"\n                  disabled\n                >\n                  Choose a user\n                </option>\n                {users.map(optionUser => (\n                  <option key={optionUser.id} value={optionUser.name}>\n                    {optionUser.name}\n                  </option>\n                ))}\n              </select>\n            </label>\n\n            {!isUserValid && (\n              <span\n                className=\"error\"\n              >\n                Please choose a user\n              </span>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList\n          todos={todos}\n        />\n      </div>\n    );\n  }\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}